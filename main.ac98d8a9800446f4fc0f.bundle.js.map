{"version":3,"file":"main.ac98d8a9800446f4fc0f.bundle.js","sources":["webpack:///./src/utils.ts"],"sourcesContent":["export function addDays(date: Date, days: number): Date {\n  const cur_date = typeof date === \"object\" ? date : new Date(date);\n  var time = cur_date.getTime();\n  time += days * 86400000; // 24 * 60 * 60 * 1000\n  return new Date(time);\n}\n\nexport function getDatesOfWeek(week: number, year?: number): Array<Date> {\n  const simple = new Date(year || new Date().getFullYear(), 0, 1 + (week - 1) * 7);\n  const dow = simple.getDay();\n  const ISOweekStart = simple;\n  if (dow <= 4)\n    ISOweekStart.setDate(simple.getDate() - simple.getDay());\n  else\n    ISOweekStart.setDate(simple.getDate() + 7 - simple.getDay());\n\n  return Array(7).fill(null).map((_, idx) => (\n    addDays(ISOweekStart, idx)\n  ))\n}\n\nexport function getWeekDayOfCurrentYear(date: Date = new Date()): number {\n  const current_year = new Date().getFullYear();\n  const start_date = new Date(`1/1/${current_year}`);\n  const start_year_time = start_date.getTime();\n  const weekday_start_date = start_date.getDay();\n\n  const current_time = addDays(date, - (date.getDay() - weekday_start_date)).getTime();\n\n  return Math.floor((current_time - start_year_time) / (7 * 24 * 60 * 60 * 1000)) + 1;\n}\n\nexport function getWeekDay(date: Date): string {\n  var weekday = new Array(7);\n  weekday[0] = \"sun\";\n  weekday[1] = \"mon\";\n  weekday[2] = \"tue\";\n  weekday[3] = \"wed\";\n  weekday[4] = \"thu\";\n  weekday[5] = \"fri\";\n  weekday[6] = \"sat\";\n  return weekday[date.getDay()]\n}\n\nexport function getMonthString(date: Date): string {\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n  ];\n  return monthNames[date.getMonth()];\n}"],"mappings":"AAAA","sourceRoot":""}